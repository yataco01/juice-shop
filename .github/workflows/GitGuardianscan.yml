name: GitGuardian Secrets Scan

on: [push]

jobs:
  secrets-scan:
    name: GitGuardian Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pip and ggshield (latest)
        run: |
          python3 -m pip install --upgrade pip
          pip install --upgrade ggshield

      - name: Run GitGuardian scan on full repo and generate report
        run: |
          # Crear el directorio para guardar el reporte
          mkdir -p scan-report
          # Ejecutar el escaneo y guardar el reporte en formato JSON
          ggshield secret scan repo . --json > scan-report/gitguardian-report.json || true
          echo "== Contenido del reporte generado =="
          cat scan-report/gitguardian-report.json || echo "No se generó ningún reporte"
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

      - name: Convertir reporte GitGuardian a Markdown
        run: |
          sudo apt-get install -y jq
          REPORT=scan-report/gitguardian-report.json
          OUTPUT=scan-report/gitguardian-summary.md

          echo "# 🛡️ GitGuardian Scan Summary" > $OUTPUT
          echo "" >> $OUTPUT

          if jq -e '.scans[].entities_with_incidents[] | select(.total_incidents > 0)' "$REPORT" > /dev/null; then
            jq -r '.scans[].entities_with_incidents[] |
              select(.total_incidents > 0) |
              "- Archivo: \(.filename)\n  - Incidentes: \(.total_incidents)\n"' "$REPORT" >> "$OUTPUT"
          else
            echo "✅ No se encontraron secretos." >> "$OUTPUT"
          fi

      - name: Upload GitGuardian JSON report
        uses: actions/upload-artifact@v4
        with:
          name: gitguardian-report
          path: scan-report/gitguardian-report.json

      - name: Upload GitGuardian Markdown summary
        uses: actions/upload-artifact@v4
        with:
          name: gitguardian-summary
          path: scan-report/gitguardian-summary.md
